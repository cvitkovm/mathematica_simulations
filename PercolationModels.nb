(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     70502,       1819]
NotebookOptionsPosition[     66561,       1686]
NotebookOutlinePosition[     67273,       1709]
CellTagsIndexPosition[     67230,       1706]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Optimal Percolation Concentration for Finding \
Multiple Spanning Clusters",
 FontColor->RGBColor[0., 0., 0.]]], "Title",
 CellChangeTimes->{{3.529336392661129*^9, 3.5293364065880527`*^9}},
 FontFamily->"Arial Narrow",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox["Sam Keller and Milan Cvitkovic",
 FontColor->RGBColor[0., 0., 0.]]], "Subtitle",
 CellChangeTimes->{{3.529271186370738*^9, 3.529271193887855*^9}, {
  3.5292713319325123`*^9, 3.529271370474132*^9}, {3.529271475423451*^9, 
  3.529271475503676*^9}, {3.529272049721224*^9, 3.5292720518222713`*^9}, {
  3.6168852993335695`*^9, 3.616885299572728*^9}},
 FontFamily->"Arial Narrow",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Section 01: Introduction",
 FontFamily->"Arial",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.5292778331788588`*^9, 3.5292778364255667`*^9}},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "In this notebook, our group hopes to explore the probability of finding \
multiple spanning clusters in a given peroclation cluster. We hope to find a \
probability distribution for finding multiple spanning clusters over a range \
of occupied-site concentrations which, once plotted, will show us the \
concentration for which it is most probable that multiple spanning clusters \
appear. \n\nTo do this, we will first use the site percolation program and \
the cluster labeling program given in the book-in-progress \
\[OpenCurlyDoubleQuote]Computer Simulations with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and Java\[CloseCurlyDoubleQuote] by Paul Wellin and Todd Gayley. This will \
allow us to create a lattice of sites having values of 1 (occupied) or 0 (not \
occupied).  Next we will identify all the unique clusters in the lattice \
using the Hoshen-Kopelman algorithm. Finally, we will scan the edges of the \
lattice to find common labels in either the first and last row or first and \
last column - if there are matching label sites in either of these it will \
tell us whether there is a spanning cluster, and if there are multiple \
matching labels we know we have multiple spanning clusters. \n\nOnce we have \
this code working, we can run this module on a range of concentration values \
and run it many times for each concentration value. For each of them, we can \
output a probability of how likely it is that we find multiple spanning \
clusters for that particular concentration value by dividing the number of \
times we find multiple spanning clusters by the total number of tries done \
for this concentration value. Done over a whole range of concentration \
values, this algorithm will produce a long list of lists, with each sublist \
being of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"concentration", " ", "value"}], ",", " ", 
     RowBox[{
      RowBox[{"prob", ".", " ", "of"}], " ", "finding", " ", "multiple", " ", 
      "spanning", " ", "clusters"}]}], "}"}], TraditionalForm]]],
 ". Then, we can plot this list of lists to get a distribution which will \
find us the optimal concentration for which it is most probable that we find \
multiple spanning clusters! Effectively, we will have found the concentration \
threashold for multiple spanning clusters.\n\nWe expect that this optimal \
concentration value will be above the percolation threashold of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "0.59"}], TraditionalForm]]],
 ", but not too much higher since at high concentration values, distinct \
clusters are likely to bond together into a single cluster. \n\nThe \
applications of this seem interesting because having multiple spanning \
clusters would have a drastic effect on the physical properties of the \
lattice and how percolation occurs in the lattice."
}], "Text",
 CellChangeTimes->{{3.529278885698666*^9, 3.529279119971484*^9}, {
  3.529279162602407*^9, 3.5292794821208353`*^9}, {3.52927971735716*^9, 
  3.529279771856702*^9}, {3.52933547824372*^9, 3.529335513840811*^9}, {
  3.529335628918233*^9, 3.529335646423305*^9}, {3.529336239132517*^9, 
  3.52933628768401*^9}, {3.529336370938698*^9, 3.529336371194477*^9}, {
  3.5299405764652853`*^9, 3.5299405771621037`*^9}, {3.529940657936446*^9, 
  3.529941072551264*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Section 02: Needed Packages",
 FontFamily->"Arial",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.52927787529641*^9, 3.529277878768289*^9}, 
   3.529277961142001*^9},
 FontColor->GrayLevel[0]],

Cell["Didn\[CloseCurlyQuote]t need any!", "Text",
 CellChangeTimes->{{3.529279774664212*^9, 3.529279776136194*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 03: Site Percolation Program", "Section",
 CellChangeTimes->{{3.52927796229385*^9, 3.529277973517473*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
Here is the Site Percolation Program from the new version of the CSM book. We\
\[CloseCurlyQuote]ll use this to make a percolation cluster\
\>", "Text",
 CellChangeTimes->{{3.52927977816014*^9, 3.529279793679779*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.5292797985926723`*^9, 3.529279798920063*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sitePercolation", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sitePercolation", "[", 
    RowBox[{"p_Real", ",", "m_Integer"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Floor", "[", 
      RowBox[{"1", "+", "p", "-", 
       RowBox[{"RandomReal", "[", "]"}]}], "]"}], ",", 
     RowBox[{"{", "m", "}"}], ",", 
     RowBox[{"{", "m", "}"}]}], "]"}]}], ";"}]}], "Input",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Check", "Subsubsection",
 CellChangeTimes->{{3.529279800743514*^9, 3.5292798014960403`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cluster", "=", 
   RowBox[{"sitePercolation", "[", 
    RowBox[{"0.4", ",", "10"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cluster", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.529279803484926*^9, 3.5292798351049356`*^9}, {
  3.5292799649746027`*^9, 3.529279968292655*^9}, {3.5292800151234922`*^9, 
  3.529280018898789*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "1", "0", "0", "1", "0", "0", "1"},
     {"0", "0", "1", "0", "1", "0", "0", "0", "1", "0"},
     {"1", "0", "0", "0", "0", "0", "0", "1", "1", "0"},
     {"1", "0", "1", "0", "1", "1", "0", "0", "1", "1"},
     {"0", "1", "0", "1", "1", "0", "1", "0", "0", "0"},
     {"0", "0", "1", "1", "1", "1", "1", "0", "0", "1"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "1", "0"},
     {"1", "0", "0", "1", "0", "1", "1", "0", "0", "1"},
     {"1", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "1", "1", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.529279817391034*^9, 3.529279835526486*^9}, {
   3.529279955514737*^9, 3.529279968664331*^9}, 3.529280019312742*^9, 
   3.529321223668034*^9, 3.5297964682581778`*^9, 3.5299410901455708`*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell["\<\
It works! Let\[CloseCurlyQuote]s now work on labeling clusters\
\>", "Text",
 CellChangeTimes->{{3.52927982039088*^9, 3.529279839870479*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 04: Cluster Labeling Program", "Section",
 CellChangeTimes->{{3.5292779792627277`*^9, 3.5292779914448977`*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
Now, we will use the cluster labeling program provided by Wellin and Gayley \
in their new CSM book. We know from our homework assignment that this program \
has the potential to mislabel clusters... but because this is the best \
implementation of the H-K algorithm that we have right now, it will have to \
do.\
\>", "Text",
 CellChangeTimes->{{3.529279864639426*^9, 3.5292799107563677`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.529279915324608*^9, 3.529279915636076*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "ClusterLabel", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClusterLabel", "[", "sp_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "u", ",", " ", "ul", ",", " ", "ulp", ",", " ", "uN", ",", " ", "uW", 
      ",", " ", "ulN", ",", " ", "ulW", ",", " ", 
      RowBox[{"len", " ", "=", " ", 
       RowBox[{"Length", "[", "sp", "]"}]}], ",", " ", "rules1", ",", " ", 
      "rules2", ",", " ", "labels"}], "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{"u", " ", "=", " ", 
      RowBox[{"PadLeft", "[", 
       RowBox[{"sp", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"len", " ", "+", " ", "1"}], ",", " ", 
          RowBox[{"len", " ", "+", " ", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{"ul", " ", "=", " ", 
      RowBox[{"u", " ", "/.", " ", 
       RowBox[{"1", " ", "->", " ", "0"}]}]}], ";", "\n", "  ", 
     RowBox[{"ulp", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", 
     RowBox[{"Do", "[", "\n", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"uN", " ", ":=", " ", 
         RowBox[{"u", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"q", " ", "-", " ", "1"}], ",", " ", "k"}], "]"}], 
          "]"}]}], ";", "\n", "   ", 
        RowBox[{"uW", " ", ":=", " ", 
         RowBox[{"u", "[", 
          RowBox[{"[", 
           RowBox[{"q", ",", " ", 
            RowBox[{"k", " ", "-", " ", "1"}]}], "]"}], "]"}]}], ";", "\n", 
        "   ", 
        RowBox[{"ulN", " ", ":=", " ", 
         RowBox[{"ul", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"q", " ", "-", " ", "1"}], ",", " ", "k"}], "]"}], 
          "]"}]}], ";", "\n", "   ", 
        RowBox[{"ulW", " ", ":=", " ", 
         RowBox[{"ul", "[", 
          RowBox[{"[", 
           RowBox[{"q", ",", " ", 
            RowBox[{"k", " ", "-", " ", "1"}]}], "]"}], "]"}]}], ";", "\n", 
        "   ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"[", 
              RowBox[{"q", ",", " ", "k"}], "]"}], "]"}], " ", "==", " ", 
            "1"}], " ", "&&", " ", 
           RowBox[{"uN", " ", "==", " ", "1"}], " ", "&&", " ", 
           RowBox[{"uW", " ", "==", " ", "1"}], " ", "&&", " ", 
           RowBox[{"ulN", " ", "=!=", " ", "ulW"}]}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"ul", "[", 
             RowBox[{"[", 
              RowBox[{"q", ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"ulp", "[", 
               RowBox[{"[", "ulW", "]"}], "]"}], ",", " ", 
              RowBox[{"ulp", "[", 
               RowBox[{"[", "ulN", "]"}], "]"}]}], "]"}]}], ";", " ", 
           RowBox[{
            RowBox[{"ulp", "[", 
             RowBox[{"[", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"ulp", "[", 
                 RowBox[{"[", "ulW", "]"}], "]"}], ",", " ", 
                RowBox[{"ulp", "[", 
                 RowBox[{"[", "ulN", "]"}], "]"}]}], "]"}], "]"}], "]"}], " ",
             "=", " ", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"ulp", "[", 
               RowBox[{"[", "ulW", "]"}], "]"}], ",", " ", 
              RowBox[{"ulp", "[", 
               RowBox[{"[", "ulN", "]"}], "]"}]}], "]"}]}]}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"[", 
              RowBox[{"q", ",", " ", "k"}], "]"}], "]"}], " ", "==", " ", 
            "1"}], " ", "&&", " ", 
           RowBox[{"uN", " ", "==", " ", "1"}]}], ",", " ", 
          RowBox[{
           RowBox[{"ul", "[", 
            RowBox[{"[", 
             RowBox[{"q", ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
           "ulN"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"[", 
              RowBox[{"q", ",", " ", "k"}], "]"}], "]"}], " ", "==", " ", 
            "1"}], " ", "&&", " ", 
           RowBox[{"uW", " ", "==", " ", "1"}]}], ",", " ", 
          RowBox[{
           RowBox[{"ul", "[", 
            RowBox[{"[", 
             RowBox[{"q", ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
           "ulW"}], ",", " ", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"[", 
             RowBox[{"q", ",", " ", "k"}], "]"}], "]"}], " ", "==", " ", 
           "1"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"ul", "[", 
             RowBox[{"[", 
              RowBox[{"q", ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{
             RowBox[{"Max", "[", "ul", "]"}], " ", "+", " ", "1"}]}], ";", 
           "\n", "    ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ulp", ",", " ", 
             RowBox[{"Max", "[", "ul", "]"}]}], "]"}]}]}], "]"}]}], ",", "\n",
        "   ", 
       RowBox[{"{", 
        RowBox[{"q", ",", " ", "2", ",", " ", 
         RowBox[{"len", " ", "+", " ", "1"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "2", ",", " ", 
         RowBox[{"len", " ", "+", " ", "1"}]}], "}"}]}], "]"}], ";", "\n", 
     "  ", 
     RowBox[{"rules1", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "ulp", "]"}], "]"}], " ", "->", " ", "ulp"}], 
       "]"}]}], ";", "\n", "  ", 
     RowBox[{"labels", " ", "=", " ", 
      RowBox[{"ulp", " ", "//.", "rules1"}]}], ";", "\n", "  ", 
     RowBox[{"rules2", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Union", "[", "labels", "]"}], " ", "->", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"Union", "[", "labels", "]"}], "]"}], "]"}]}], "]"}]}], ";",
      "\n", "  ", 
     RowBox[{
      RowBox[{"ul", " ", "//.", " ", "rules1"}], " ", "/.", " ", 
      "rules2"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.529274106439527*^9, 3.529274107410658*^9}, {
  3.529796450408746*^9, 3.529796454480139*^9}},
 AspectRatioFixed->False,
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Check", "Subsubsection",
 CellChangeTimes->{{3.529279917979958*^9, 3.529279919043592*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"labelMatrix", "=", 
   RowBox[{"ClusterLabel", "[", "cluster", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"labelMatrix", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.529279920885743*^9, 3.529279944797636*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "2", "0", "0", "3", "0", "0", "4"},
     {"0", "0", "0", "5", "0", "6", "0", "0", "0", "7", "0"},
     {"0", "8", "0", "0", "0", "0", "0", "0", "7", "7", "0"},
     {"0", "8", "0", "9", "0", "10", "10", "0", "0", "7", "7"},
     {"0", "0", "11", "0", "10", "10", "0", "10", "0", "0", "0"},
     {"0", "0", "0", "10", "10", "10", "10", "10", "0", "0", "12"},
     {"0", "0", "0", "10", "0", "0", "0", "0", "0", "13", "0"},
     {"0", "14", "0", "0", "15", "0", "16", "16", "0", "0", "17"},
     {"0", "14", "0", "0", "0", "0", "16", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "16", "16", "16", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.529279935854576*^9, 3.5292800217326517`*^9}, 
   3.529321227190959*^9, 3.529796471016739*^9, 3.5299410953643417`*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell["\<\
Looks good! It labels all of the different clusters with differnet numbers. \
\>", "Text",
 CellChangeTimes->{{3.5292800292089863`*^9, 3.5292800370964003`*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Section 05: Finding Two Spanning Clusters in Percolation Clusters\
\>", "Section",
 CellChangeTimes->{{3.529278177376796*^9, 3.529278185535162*^9}, {
  3.529278225222047*^9, 3.529278260077043*^9}, {3.5293355203297787`*^9, 
  3.529335520577154*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
Now we need to write a module that will find the number of spanning clusters \
for a given concentration value. To do this, our module will take in a pStart \
and an pEnd, along with a pStep, that will step through all the values betwen \
pStart and pEnd and produce a percolating cluster for each concentration. \
With each percolating cluster, we'll make a labeled lattice that has the \
labeled clusters in it. In this lattice, we will pull out the first and last \
row and check for any similar numbers. If there are similar numbers, then we \
have spanning clusters! Then we'll return a list of lists, where each sublist \
has the p value and the number of spanning clusters in it. We'll also check \
for horizontal spanning clusters by making a second labeled lattice, which is \
the transpose of the first one (so that the rows and columns are switched), \
and we'll perform the same check for that lattice.

Because of the way ClusterLabel works, there is always a row and column of 0s \
at the beginning of the labeled cluster-- this means that we'll always have \
one spannign cluster, beacuse it will be comprisd of 0s. So, when we check \
for multiple spanning clusters, we'll be looking for at least 3 (one of which \
is 0s and the rest make up real spanning clusters). \
\>", "Text",
 CellChangeTimes->{{3.529318812323614*^9, 3.5293189874747667`*^9}, {
  3.529319039842362*^9, 3.529319088927188*^9}, {3.529319187947071*^9, 
  3.5293192422981453`*^9}, {3.5293192762987347`*^9, 3.5293192968021812`*^9}, {
  3.5293355347561617`*^9, 3.529335537225157*^9}, {3.529335656163786*^9, 
  3.529335666970748*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell["Code Development", "Subsubsection",
 CellChangeTimes->{{3.529319001826395*^9, 3.5293190036147013`*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
To run this type of module, we'll need to make use the Intersection function \
to check the first and last row of a labeled cluster lattice for any common \
clusters. \
\>", "Text",
 CellChangeTimes->{{3.529319004810401*^9, 3.5293190368181343`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.52931909116146*^9, 3.529319108942651*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{{3.529319104264524*^9, 3.529319109455284*^9}, 
   3.529941102470138*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell["\<\
As we can see, if those two lists had been our first and last rows, \
Intersection produced just a 3, signaling that there's only one spanning \
cluster and that it is a bunch of 3s\
\>", "Text",
 CellChangeTimes->{{3.529319111187728*^9, 3.5293191454105883`*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.529319154090568*^9, 3.5293191544192333`*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "findSpanningClusters", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findSpanningClusters", "[", 
   RowBox[{"pStart_", ",", "pEnd_", ",", "pStep_", ",", "latticeEdge_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pList", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "currentLattice", ",", "labelLattice", ",", 
      "labelLattice2", ",", "i", ",", "p"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"p", "=", "pStart"}], ",", 
       RowBox[{"p", "\[LessEqual]", "pEnd"}], ",", 
       RowBox[{"p", "=", 
        RowBox[{"p", "+", "pStep"}]}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"currentLattice", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{"1", "+", "p", "-", 
              RowBox[{"RandomReal", "[", "]"}]}], "]"}], ",", 
            RowBox[{"{", "latticeEdge", "}"}], ",", 
            RowBox[{"{", "latticeEdge", "}"}]}], "]"}]}], ";", 
         RowBox[{"(*", " ", 
          RowBox[{
          "This", " ", "creates", " ", "the", " ", "Percolating", " ", 
           "Cluster"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"labelLattice", "=", 
          RowBox[{"ClusterLabel", "[", "currentLattice", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"labelLattice2", "=", 
          RowBox[{"Transpose", "[", "labelLattice", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Intersection", "[", 
              RowBox[{
               RowBox[{"labelLattice", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"labelLattice", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], ">", " ", 
            "2"}], " ", ",", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"pList", ",", 
             RowBox[{"{", 
              RowBox[{"p", ",", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"Intersection", "[", 
                  RowBox[{
                   RowBox[{"labelLattice", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"labelLattice", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], "-", 
                "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Intersection", "[", 
                RowBox[{
                 RowBox[{"labelLattice2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"labelLattice2", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], ">", " ",
               "2"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"pList", ",", 
                RowBox[{"{", 
                 RowBox[{"p", ",", 
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{
                    RowBox[{"labelLattice2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"labelLattice2", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], "-", 
                   "1"}]}], "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ")"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "pList"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.529272347158662*^9, 3.529272371598301*^9}, {
   3.5292724098850727`*^9, 3.5292724380292788`*^9}, {3.529272474771998*^9, 
   3.529272657713478*^9}, {3.5292727298250713`*^9, 3.5292727544788*^9}, {
   3.529273243130253*^9, 3.529273321672072*^9}, {3.529273390637536*^9, 
   3.529273414828326*^9}, {3.529273555803357*^9, 3.529273669351555*^9}, {
   3.529273714623722*^9, 3.529273860180159*^9}, {3.529273924730336*^9, 
   3.5292739288901052`*^9}, {3.529273975907783*^9, 3.529273998289679*^9}, {
   3.5292740640723343`*^9, 3.529274075477751*^9}, {3.529274166027999*^9, 
   3.529274259780456*^9}, {3.5292744870269833`*^9, 3.529274489057289*^9}, {
   3.529274653517787*^9, 3.529274707930842*^9}, {3.52927477522569*^9, 
   3.5292747840000153`*^9}, {3.529275385635841*^9, 3.529275408706977*^9}, 
   3.5292758481834*^9, {3.529318955111355*^9, 3.529318957597814*^9}, {
   3.52931916495153*^9, 3.529319176167923*^9}, {3.529319349409685*^9, 
   3.5293193693669233`*^9}, {3.529796431278062*^9, 3.5297964368494997`*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Check", "Subsubsection",
 CellChangeTimes->{{3.529319313340996*^9, 3.5293193141467333`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findSpanningClusters", "[", 
  RowBox[{"0.5", ",", "0.7", ",", "0.01", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.529274005516011*^9, 3.529274032452903*^9}, {
   3.529274095691544*^9, 3.529274095954158*^9}, {3.529274272535717*^9, 
   3.529274326788288*^9}, {3.529274380211008*^9, 3.5292743855545607`*^9}, {
   3.5292746989246683`*^9, 3.5292747138885527`*^9}, 3.5292760550477743`*^9, {
   3.529319329141244*^9, 3.529319340563799*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.6100000000000001`", ",", "2"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.52927403378658*^9, 3.529274114653965*^9}, 
   3.529274176749357*^9, 3.529274214249815*^9, {3.529274262242*^9, 
   3.5292743156154346`*^9}, 3.529274348788291*^9, 3.529274434022725*^9, 
   3.529274547768374*^9, {3.529319341906825*^9, 3.529319384984572*^9}, {
   3.52979647897465*^9, 3.529796487582007*^9}, {3.529941106850689*^9, 
   3.529941116424739*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[TextData[{
 "Looks like it worked! For one concentration value, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "0.63"}], TraditionalForm]]],
 ", we got two spanning clusters in the percolating cluster! So, it doesn't \
look like it's likely to have multiple spanning clusters, but it is \
possible!"
}], "Text",
 CellChangeTimes->{{3.529274502056739*^9, 3.5292745084848623`*^9}, {
  3.529319387963481*^9, 3.529319439906477*^9}, {3.529796490161811*^9, 
  3.529796490206839*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Section 06: Finding a Distribution of The Probabilities of Finding Multiple \
Spanning Clusters For Different Concentration Values\
\>", "Section",
 CellChangeTimes->{{3.5292782715085983`*^9, 3.529278312747423*^9}, {
  3.529278440353003*^9, 3.529278443727556*^9}, {3.5292784773349237`*^9, 
  3.529278495526268*^9}, {3.529335861635372*^9, 3.5293358633870697`*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
Now, we want to a slightly ldifferent thing-- we want to run the same basic \
algorithm, but for each concentation value, we want to produce a large number \
of percolating clusters and determine in how many of those clusters are there \
multiple spanning clusters. To do this, we'll add an extra For loop in our \
program that runs the Cluster Labeling program a large number of times. Each \
time there are multiple spanning clusters, we'll add one to this index that \
we call \"numMultiple.\" Then, after we've made a lot of clusters for one \
concentration value, we'll calculate the number of occurances of multple \
spanning clusters divided by the number of percolating clusters created, \
effectively giving us a probability of how likely it is, for a single \
concentration value, that multiple spanning clusters appear. We'll then make \
a list of all of these probabilities and their associated concentration \
values and return the whole list. \
\>", "Text",
 CellChangeTimes->{{3.529320536153222*^9, 3.5293205821040573`*^9}, {
  3.5293206293258333`*^9, 3.529320631701634*^9}, {3.52932066999319*^9, 
  3.529320871194291*^9}, {3.529335683790247*^9, 3.529335686025278*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.529320875946459*^9, 3.5293208762273607`*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "findSpanningClusters2", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"findSpanningClusters2", "[", 
    RowBox[{
    "pStart_", ",", "pEnd_", ",", "pStep_", ",", "runs_", ",", 
     "latticeEdge_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numMultiple", "=", "0"}], ",", "currentLattice", ",", 
       "labelLattice", ",", "labelLattice2", ",", "i", ",", "probability", 
       ",", "p", ",", 
       RowBox[{"pList", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"p", "=", "pStart"}], ",", 
        RowBox[{"p", "\[LessEqual]", "pEnd"}], ",", 
        RowBox[{"p", "=", 
         RowBox[{"p", "+", "pStep"}]}], ",", 
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numMultiple", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", "runs"}], ",", 
             RowBox[{"i", "++"}], ",", 
             RowBox[{
              RowBox[{"(", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"currentLattice", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Floor", "[", 
                    RowBox[{"1", "+", "p", "-", 
                    RowBox[{"RandomReal", "[", "]"}]}], "]"}], ",", 
                   RowBox[{"{", "latticeEdge", "}"}], ",", 
                   RowBox[{"{", "latticeEdge", "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"labelLattice", "=", 
                 RowBox[{"ClusterLabel", "[", "currentLattice", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"labelLattice2", "=", 
                 RowBox[{"Transpose", "[", "labelLattice", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{
                    RowBox[{"labelLattice", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"labelLattice", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], ">", 
                   "2"}], " ", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"numMultiple", "++"}], ";"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{
                    RowBox[{"labelLattice2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"labelLattice2", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], ">", 
                    "2"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"numMultiple", "++"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
               "\[IndentingNewLine]", ")"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"probability", "=", 
            RowBox[{"numMultiple", "/", "runs"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"pList", ",", 
             RowBox[{"{", 
              RowBox[{"p", ",", "probability"}], "}"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ")"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "pList"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdz0sowwEAx/G1EDUny2GUR8mykrDJiFFqQ8xIi5o8tjSPhRQpmrHU2uYV
UspzyjLz9wqjsYPHxcrUmlZr2sEwJKS28v/t8Otz+h2+KS0KkZRKoVBSycHL
OKlKW+Ev4af1qeGYqFADXe9WHWTvi2eg3cHZgkEZdw/WiaoPYTSr7QsuKdkh
SMgckTpSg9IVDRkHgwz4UWxkwonv2kzoto3zoF8yz4fnQ4kCqKeFqmBs2U0N
nBRSG6BFoGiEEp9VBkf+Bnohze3RQeFDih4eTpnXIPcquA29z5sW+JNTcA1z
zwz3cNmd74Qvn1XPsJVZFgj/L/S/kODsBGH79A9dD+mv8ZDgEglwta4tGUap
OpkwQ5rMgpU8RTakmPbCnpj4PMia9ZXC23RJF7z5NoxCvzs0B//EuwtQHWFf
gTRh0zr09k+Y4NQnzwIfCaoVcnwxNmg+WnyDLpszANk1SfWTpOX5PWEzNXdL
UG1+WoUnx6ebUDx9aoRZiR7OBmn3cHMelMcH5NpKsrdopgP+AxcsF3k=
  "],
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Check", "Subsubsection",
 CellChangeTimes->{{3.5293208786184473`*^9, 3.529320879770276*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findSpanningClusters2", "[", 
  RowBox[{"0.6", ",", "0.7", ",", "0.01", ",", "100", ",", "30"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5293287181537027`*^9, 3.529328725489353*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.6`", ",", 
     FractionBox["3", "100"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.61`", ",", 
     FractionBox["1", "100"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.62`", ",", 
     FractionBox["1", "25"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.63`", ",", 
     FractionBox["1", "100"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.64`", ",", 
     FractionBox["1", "50"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.65`", ",", 
     FractionBox["3", "100"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.66`", ",", 
     FractionBox["1", "100"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.67`", ",", 
     FractionBox["1", "50"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.68`", ",", 
     FractionBox["1", "100"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6900000000000001`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000001`", ",", 
     FractionBox["1", "50"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.52932875893808*^9, 3.529796525300745*^9, 
  3.529941156554446*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell["Looks like it works!", "Text",
 CellChangeTimes->{{3.529328742663206*^9, 3.529328746943124*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Run For Real!", "Subsection",
 CellChangeTimes->{{3.529328735478956*^9, 3.529328740873453*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
Now, we'll run our simulation on cluster sizes of 30, where we have a range \
of concentration values that range from 0.4 to 0.8. For each concentration \
value, we'll make 5000 percolating clusters and look for spanning clusters-- \
the number of clusters that produce 2 spanning clusters divided by the total \
number of clusters made will produce a probability of finding multiple \
spanning clusters!\
\>", "Text",
 CellChangeTimes->{{3.52932875206292*^9, 3.529328801007255*^9}, {
   3.529328854893865*^9, 3.5293288670703077`*^9}, 3.52933560380529*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"findSpanningClusters2", "[", 
   RowBox[{"0.4", ",", "0.8", ",", "0.01", ",", "5000", ",", "30"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.529274005516011*^9, 3.529274032452903*^9}, {
   3.529274095691544*^9, 3.529274095954158*^9}, {3.529274272535717*^9, 
   3.529274326788288*^9}, {3.529274380211008*^9, 3.5292743855545607`*^9}, {
   3.5292746989246683`*^9, 3.5292747138885527`*^9}, {3.529274794678069*^9, 
   3.5292748357412167`*^9}, {3.5292749975546923`*^9, 3.529275013711581*^9}, {
   3.5292750823661222`*^9, 3.529275082452734*^9}, {3.529275135813857*^9, 
   3.529275136804084*^9}, {3.529275179227355*^9, 3.5292751860423403`*^9}, {
   3.5292752537610397`*^9, 3.529275258816311*^9}, {3.5292752935677156`*^9, 
   3.529275294087242*^9}, {3.5292754303877573`*^9, 3.5292754319631863`*^9}, {
   3.529275787657235*^9, 3.5292758168316927`*^9}, {3.5292760276338167`*^9, 
   3.529276028640871*^9}, {3.5292764678287477`*^9, 3.529276506267379*^9}, 
   3.529276979717607*^9, {3.529277018692614*^9, 3.529277052546969*^9}, {
   3.529277083666752*^9, 3.529277084658091*^9}, {3.5292771766428003`*^9, 
   3.5292771800556173`*^9}, {3.529277306931942*^9, 3.529277315475178*^9}, {
   3.529278510168054*^9, 3.529278510311854*^9}, {3.529278616469955*^9, 
   3.5292786239404373`*^9}, {3.529278800648056*^9, 3.5292788203268213`*^9}, {
   3.5292795951588593`*^9, 3.529279621070853*^9}, {3.529279680941427*^9, 
   3.529279681629228*^9}, {3.529320912261016*^9, 3.529320915427621*^9}, {
   3.529321241181322*^9, 3.529321255875965*^9}, {3.529321314109128*^9, 
   3.5293213143088493`*^9}, 3.529328750808247*^9, {3.529796535577973*^9, 
   3.5297965366485643`*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.41000000000000003`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42000000000000004`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43000000000000005`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44000000000000006`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45000000000000007`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4600000000000001`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4700000000000001`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4800000000000001`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4900000000000001`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5000000000000001`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5100000000000001`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5200000000000001`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5300000000000001`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5400000000000001`", ",", 
     FractionBox["1", "1000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5500000000000002`", ",", 
     FractionBox["3", "2500"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5600000000000002`", ",", 
     FractionBox["3", "1000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5700000000000002`", ",", 
     FractionBox["11", "1250"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5800000000000002`", ",", 
     FractionBox["6", "625"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5900000000000002`", ",", 
     FractionBox["63", "5000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000002`", ",", 
     FractionBox["17", "1000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6100000000000002`", ",", 
     FractionBox["1", "50"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6200000000000002`", ",", 
     FractionBox["111", "5000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6300000000000002`", ",", 
     FractionBox["29", "1250"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6400000000000002`", ",", 
     FractionBox["107", "5000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6500000000000002`", ",", 
     FractionBox["43", "2500"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6600000000000003`", ",", 
     FractionBox["43", "2500"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6700000000000003`", ",", 
     FractionBox["31", "2500"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6800000000000003`", ",", 
     FractionBox["9", "1000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6900000000000003`", ",", 
     FractionBox["13", "2500"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000003`", ",", 
     FractionBox["2", "625"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7100000000000003`", ",", 
     FractionBox["9", "5000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7200000000000003`", ",", 
     FractionBox["1", "1000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7300000000000003`", ",", 
     FractionBox["1", "2500"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7400000000000003`", ",", 
     FractionBox["1", "5000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7500000000000003`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7600000000000003`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7700000000000004`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7800000000000004`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7900000000000004`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8000000000000004`", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5293271558630857`*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell["\<\
Looks like we found a lot of clusters that had multiple spanning clusters... \
let's ListPlot this data to see if we can get some sort of recognizable \
distribution\
\>", "Text",
 CellChangeTimes->{{3.5293288729901247`*^9, 3.529328894265916*^9}, 
   3.529335619220304*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Concentration Value (p)\>\"", ",", 
      "\"\<Probability of Getting Multiple Spanning Clusters\>\"", ",", 
      "\"\<Probability of Finding Two Spanning Clusters as a Function of \
Concentration\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"GrayLevel", "[", "0.9", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.529328361305544*^9, 3.529328408542941*^9}, {
  3.52932845463948*^9, 3.529328601729808*^9}, {3.529328681414508*^9, 
  3.529328697265821*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAIAmIQPWsmCNy0Z4ACW67riwtsb8H5D6tE1rk/RPBbXwfu
kGu9DedrxvQf+qpxB84/ewYEEPxCsIF34XyQaVUi9+B8oGFAExF8sHEx9+F8
CHgA5weBNSD4SwpAFiD43zRAJiD4HhAP2P9Z+fGSb1KAPcS/D+0TjUINtFYG
278Beef1Q/tfdVl7SiZn2EP8/8heP28x4x7WJnuwc/ofQdU320OMe2SvcCk/
nv1cp70xGDy2n3NEYUNRxkR7SPg8tq8Ge3SKPcg0ruuP7R2bHh2fsXuaPSS8
ntg/mCO4dO/B6VB1T+zVF3RuePhyqj0k/J7YK/39VvpgzkR7ebCBT+F8SHg+
tRdOPHxZO7XT/jDIeYee2lvf9++dntdkDwnfZ/ZTvrHFz/AptU8Dg2f2us4y
rx+ZZdlDwvuZ/aTT9R77a2Ptwd7leg4PH0j4P4eqt7IHG7cOxteChusLtPh4
gRYfL9Di4wVafLyE8yHxgc4fTY+j6XFwpEcAhg7sew==
   "], {
    {Hue[0.67, 0.6, 0.6], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 42], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 43], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 44], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 45], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 46], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 47], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 48], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 49], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 50], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 51], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 52], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 53], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 54], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 55], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 56], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 57], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 58], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 59], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 60], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 61], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 62], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 63], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 64], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 65], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 66], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 67], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 68], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 69], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 70], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 71], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 72], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 73], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 74], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 75], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 76], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 77], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 78], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 79], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 80], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 81], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 82]}, {}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.4, 0},
  Background->GrayLevel[0.9],
  Frame->True,
  FrameLabel->{
    FormBox["\"Concentration Value (p)\"", TraditionalForm], 
    FormBox[
    "\"Probability of Getting Multiple Spanning Clusters\"", TraditionalForm], 
    FormBox[
    "\"Probability of Finding Two Spanning Clusters as a Function of \
Concentration\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  GridLines->Automatic,
  ImageSize->500,
  PlotRange->{{0.4, 0.8}, {0., 0.0232}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5293284091467457`*^9, {3.5293284581688538`*^9, 3.529328497925818*^9}, {
   3.5293285319894753`*^9, 3.529328537446825*^9}, 3.529328602596343*^9, 
   3.52932869843829*^9, 3.529329162729694*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[TextData[{
 "Wow!! Check out that distribution! We clearly have an optimal concentration \
value at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "0.63"}], TraditionalForm]]],
 ". This means that this is the value at which the probability of finding ",
 "multiple",
 " spanning clusters is highest. "
}], "Text",
 CellChangeTimes->{{3.529328901046041*^9, 3.529328914158141*^9}, {
   3.5293352896893387`*^9, 3.5293353171935883`*^9}, 3.529335624829359*^9},
 FontColor->GrayLevel[0]],

Cell["\<\
Now let\[CloseCurlyQuote]s see what happens when we hone in on the \
threashold. We\[CloseCurlyQuote]ll do the same run but for a range of \
probabilities from 0.6 and 0.66, since we know that the critical probability \
probably lies within that range\
\>", "Text",
 CellChangeTimes->{{3.5297971158918037`*^9, 3.5297971396576033`*^9}, {
   3.529797285151219*^9, 3.529797286894176*^9}, {3.5297976856556883`*^9, 
   3.5297976919814157`*^9}, {3.529835193009358*^9, 3.5298351940908337`*^9}, 
   3.5299412023276863`*^9},
 FontColor->GrayLevel[0]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"findSpanningClusters2", "[", 
    RowBox[{"0.6", ",", "0.66", ",", "0.002", ",", "5000", ",", "30"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{"findSpanningClusters2", "[", 
    RowBox[{"0.6", ",", "0.66", ",", "0.002", ",", "5000", ",", "60"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5297972935295143`*^9, 3.52979733240761*^9}, {
  3.529797454845331*^9, 3.529797454909004*^9}, {3.529797506771647*^9, 
  3.529797512211978*^9}, {3.529797549011229*^9, 3.529797561251463*^9}, {
  3.529941234606009*^9, 3.529941235590529*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{"data2", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Concentration Value (p)\>\"", ",", 
      "\"\<Probability of Getting Multiple Spanning Clusters\>\"", ",", 
      "\"\<Probability of Finding Two Spanning Clusters as a Function of \
Concentration\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"GrayLevel", "[", "0.9", "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"data3", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Concentration Value (p)\>\"", ",", 
      "\"\<Probability of Getting Multiple Spanning Clusters\>\"", ",", 
      "\"\<Probability of Finding Two Spanning Clusters as a Function of \
Concentration\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"GrayLevel", "[", "0.9", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.529851876339478*^9, 3.529851885680832*^9}, {
  3.5298519274196157`*^9, 3.529851931957831*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwA2IQbQwGj+3vFXb1PfnUb39Xha1xqvNj+xWmZ639Lk60
bxe7ee578GP70IMrlvg5TLY35FgjE5Xy2N4j4I9E8fVJ9rd/1mXtKUHIt74O
3CHX+hgqPtleH2zgY/uvt683FrtNsQebtvSx/cL0za+Kt061bz5waqHrtsf2
vRpvefcZzLTX3TT3/fJjj+2lIRrtry8usOW6/the4VJ+PPu5mfZAx3XnPEfw
tcEOfGx/RTtV8lHEdPurFS/VDDme2AMlJQNvzbavB7lC4ol9iduUb2zxM+w1
Y/oPfdV4Atd/2TdJIMLyiT3Ydq0Z9rX2pnG7PJ/YCycevqydOtNeHezhJ/Ym
gmY2e4Om2V9UAvkMYV61yDr3h1VP7A+JqwWzLp5krwoKvu4n9mBZn6n250He
nf3EXtdZ5vUjs1n2lSDnrUHwlcEB9cS+ozXq8p7HU+zPngGBJ/DwLN83X0r/
7hN7Rt8WXv/1U+wVNxRlTHz7xN6x6dHxGbun2Z8Ght7nv0/g8VE6WYIljO+p
/ZwjCiCV9vLgCEHwR+N7ZMU3AOXq5kU=
   "], {
    {Hue[0.67, 0.6, 0.6], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 32], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 33], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 34], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 35], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 36], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 37], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 38], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 39], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 40], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 41], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 42], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 43], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 44], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 45], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 46], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 47], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 48], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 49], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 50], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 51], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 52], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 53], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 54], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 55], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 56], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 57], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 58], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 59], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 60], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 61], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 62]}, {}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.6, 0.0155},
  Background->GrayLevel[0.9],
  Frame->True,
  FrameLabel->{
    FormBox["\"Concentration Value (p)\"", TraditionalForm], 
    FormBox[
    "\"Probability of Getting Multiple Spanning Clusters\"", TraditionalForm], 
    FormBox[
    "\"Probability of Finding Two Spanning Clusters as a Function of \
Concentration\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  GridLines->Automatic,
  ImageSize->500,
  PlotRange->{{0.6, 0.66}, {0.0155, 0.0272}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.529851888744223*^9, 3.5298519345787277`*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell["\<\
While there is a lot more error in the probabilities (not shown because there \
is no way to extrapolate error bars from our data), the maximum appears to be \
about 0.63\
\>", "Text",
 CellChangeTimes->{{3.529941281324201*^9, 3.529941357320629*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
Also, to check whether the concentration at which there is a maximum \
likelihood of finding multiple spanning clusters depends on lattice size, we \
ran the same simulation but using a lattice size of 60x60 (4 times the size \
used to generate the above two distributions):\
\>", "Text",
 CellChangeTimes->{{3.5299413725365067`*^9, 3.52994145231951*^9}, {
  3.529941492680059*^9, 3.529941493598567*^9}, {3.5299415334952507`*^9, 
  3.52994153434233*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwA2IQbQwGj+2V/n4rfTBnov1dFbbGqc6P7fMWM+5hFZpi
3y5289z34Mf2Ha1Rl/c8nmJvyLFGJirlsb1HwB+J4uuT7G//rMvaU/LY/op2
quSjiOn2ra8Dd8i1PrbfXP1pQ0D2LHt9sIEIPti0pY/teSavbAr0nGvffODU
Qtdtj+3bQMaLzLXX3TT3/fJjj+2FEw9f1k6daX99cYEt1/XH9kbP1qk+aZ5n
D3Rcd87zx/a6zjKvH5nNstcGO/Cxfa/GW959BjPtr1a8VDPkeGIvDbHYvh7o
uskST+x3efIwabdPs9eM6T/0VeOJ/Yss7W/T7062v+ybJBBh+QTqj8n2tfam
cbs8n9ivMD1r7Xdxor062MMI9ReVQCqf2K9ZeyO+zL/PvlpknfvDqif2lltO
lO2b32WvCgq+7if2ORVVS3Wce+zPg7w7+wlUXYt9Jch5a55Aw7vRXhlsMcx9
bfZnz4DAE2j4NtmX75svpX/3ib0+OEKa7BU3FGVMfPvEftLpeo/9tbX2p4Gh
9/nvE2h4VNmXTpZgCeN7CrWvxF4eHCFPoepz7Ufje2TFNwDpZey1
   "], {
    {Hue[0.67, 0.6, 0.6], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 32], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 33], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 34], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 35], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 36], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 37], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 38], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 39], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 40], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 41], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 42], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 43], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 44], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 45], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 46], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 47], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 48], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 49], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 50], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 51], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 52], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 53], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 54], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 55], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 56], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 57], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 58], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 59], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 60], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 61], InsetBox[
      StyleBox["\<\"\[FilledCircle]\"\>",
       StripOnInput->False,
       FontSize->Small], 62]}, {}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.6, 0},
  Background->GrayLevel[0.9],
  Frame->True,
  FrameLabel->{
    FormBox["\"Concentration Value (p)\"", TraditionalForm], 
    FormBox[
    "\"Probability of Getting Multiple Spanning Clusters\"", TraditionalForm], 
    FormBox[
    "\"Probability of Finding Two Spanning Clusters as a Function of \
Concentration\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  GridLines->Automatic,
  ImageSize->500,
  PlotRange->{{0.6, 0.66}, {0, 0.0298}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.529851888744223*^9, 3.529851934657558*^9},
 FontColor->GrayLevel[0]],

Cell["\<\
We can see that, indeed, lattice size has an affect on the probability \
distribution - the concentration at which there is a maximum likelihood of \
finding multiple spanning clusters appears to have moved from ~0.63 with a \
20x20 lattice to ~0.615 with a 6060 lattice.\
\>", "Text",
 CellChangeTimes->{{3.529941455022428*^9, 3.529941574876273*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 08: Conclusions", "Section",
 CellChangeTimes->{{3.529278660778399*^9, 3.529278663496881*^9}, {
  3.5293358735785522`*^9, 3.529335880594692*^9}},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "After having run this simulation for a long period of time using a 20x20 \
lattice, we ended up with a list of concentration values and the associated \
probability of finding multiple spanning clusters. Our data produced a nice \
probability distribution which has a maximum value around ",
 Cell[BoxData[
  FormBox[
   FrameBox[
    RowBox[{"p", "=", "0.63"}]], TraditionalForm]]],
 ". This is the concentration value for which it is most probable to find \
multple spanning clusters in a percolation cluster.  It's not too surprising \
that this value is not much larger than the percolation threashold for a \
single percolation cluster-- below the threashold, because it's improbable to \
get a single spanning cluster, it's even more improbable to get two distinct \
spanning clusters. However, if the concentration value is too large, then \
multiple spanning clusters would likely join at some place in the lattice and \
combine to make one spanning cluster. \n\nWhen using a lattice of size 60x60, \
the concentration at which there is a maximum likelihood of finding multpiple \
spanning clusters changes to ",
 Cell[BoxData[
  FormBox[
   FrameBox[
    RowBox[{"p", " ", "=", " ", "0.615"}]], TraditionalForm]]],
 ".  Though we only had time to test two lattice sizes, the difference in p \
values for these two different lattices indicates that there is a finite size \
effect for finding multiple spanning clusters."
}], "Text",
 CellChangeTimes->{{3.5293358851300907`*^9, 3.529335979874728*^9}, {
  3.5293361106074944`*^9, 3.529336226332451*^9}, {3.5299415981326227`*^9, 
  3.529941746089107*^9}, {3.529941782440086*^9, 3.529941788400041*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1902, 914},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, WindowSize -> {701, 800}, 
  WindowMargins -> {{0, Automatic}, {Automatic, 0}}, Visible -> False, 
  FrontEndVersion -> "8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
   StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 268, 5, 82, "Title"],
Cell[850, 29, 424, 7, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[1299, 40, 215, 4, 71, "Section"],
Cell[1517, 46, 3379, 56, 245, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4933, 107, 239, 5, 71, "Section"],
Cell[5175, 114, 141, 2, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5353, 121, 146, 2, 71, "Section"],
Cell[5502, 125, 253, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[5780, 134, 123, 2, 27, "Subsubsection"],
Cell[5906, 138, 462, 13, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6405, 156, 129, 2, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[6559, 162, 408, 9, 52, "Input"],
Cell[6970, 173, 1359, 29, 162, "Output"]
}, Open  ]],
Cell[8344, 205, 177, 4, 29, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8570, 215, 151, 2, 71, "Section"],
Cell[8724, 219, 430, 8, 29, "Text"],
Cell[CellGroupData[{
Cell[9179, 231, 121, 2, 27, "Subsubsection"],
Cell[9303, 235, 6283, 162, 372, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15623, 402, 127, 2, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[15775, 408, 290, 7, 52, "Input"],
Cell[16068, 417, 1423, 29, 177, "Output"]
}, Open  ]],
Cell[17506, 449, 196, 4, 29, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17751, 459, 284, 6, 71, "Section"],
Cell[18038, 467, 1651, 25, 101, "Text"],
Cell[CellGroupData[{
Cell[19714, 496, 135, 2, 27, "Subsubsection"],
Cell[19852, 500, 285, 6, 29, "Text"],
Cell[CellGroupData[{
Cell[20162, 510, 340, 9, 31, "Input"],
Cell[20505, 521, 168, 4, 30, "Output"]
}, Open  ]],
Cell[20688, 528, 299, 6, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21024, 539, 123, 2, 27, "Subsubsection"],
Cell[21150, 543, 5307, 113, 492, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26494, 661, 129, 2, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[26648, 667, 492, 8, 27, "Input"],
Cell[27143, 677, 518, 10, 27, "Output"]
}, Open  ]],
Cell[27676, 690, 511, 12, 26, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28236, 708, 399, 7, 67, "Section"],
Cell[28638, 717, 1220, 18, 71, "Text"],
Cell[CellGroupData[{
Cell[29883, 739, 123, 2, 24, "Subsubsection"],
Cell[30009, 743, 4860, 108, 418, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34906, 856, 129, 2, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[35060, 862, 234, 5, 27, "Input"],
Cell[35297, 869, 1143, 37, 47, "Output"]
}, Open  ]],
Cell[36455, 909, 128, 2, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36620, 916, 132, 2, 34, "Subsection"],
Cell[36755, 920, 592, 10, 41, "Text"],
Cell[CellGroupData[{
Cell[37372, 934, 1715, 26, 27, "Input"],
Cell[39090, 962, 3845, 107, 148, "Output"]
}, Open  ]],
Cell[42950, 1072, 309, 7, 26, "Text"],
Cell[CellGroupData[{
Cell[43284, 1083, 938, 21, 73, "Input"],
Cell[44225, 1106, 6048, 160, 338, "Output"]
}, Open  ]],
Cell[50288, 1269, 489, 12, 26, "Text"],
Cell[50780, 1283, 551, 10, 26, "Text"],
Cell[51334, 1295, 675, 15, 52, "Input"],
Cell[CellGroupData[{
Cell[52034, 1314, 1649, 38, 92, "Input"],
Cell[53686, 1354, 4857, 128, 337, "Output"]
}, Open  ]],
Cell[58558, 1485, 286, 6, 29, "Text"],
Cell[58847, 1493, 490, 9, 29, "Text"],
Cell[59340, 1504, 4865, 128, 337, "Output"],
Cell[64208, 1634, 387, 7, 29, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64644, 1647, 185, 3, 71, "Section"],
Cell[64832, 1652, 1701, 30, 125, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
